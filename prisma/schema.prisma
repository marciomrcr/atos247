// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Member {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String   @unique
  cellId   String   @db.ObjectId
  isLeader Boolean?
  Cell     Cell     @relation(fields: [cellId], references: [id])

  @@map("membros")
}

model Network {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique
  cell Cell[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  //Lead      Lead[]

  @@map("redes")
}

model Cell {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  name      String @unique
  networkId String @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Network   Network  @relation(fields: [networkId], references: [id])
  member    Member[]

  //Lead      Lead[]
  //member    Member[]

  @@map("celulas")
}

// model Lead {
//   id        String @id @default(auto()) @map("_id") @db.ObjectId
//   memberId  String @db.ObjectId
//   networkId String @db.ObjectId
//   cellId    String @db.ObjectId

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   network   Network  @relation(fields: [networkId], references: [id])
//   cell      Cell     @relation(fields: [cellId], references: [id])
//   member    Member   @relation(fields: [memberId], references: [id])

//   @@map("lideres")
// }

// model Member {
//   id    String @id @default(auto()) @map("_id") @db.ObjectId
//   name  String
//   email String @unique

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   Lead      Lead[]
//   Cell      Cell?    @relation(fields: [cellId], references: [id])
//   cellId    String?  @db.ObjectId

//   @@map("membros")
// }
